cmake_minimum_required(VERSION 3.20.0)

project(bavil_core)

include(GNUInstallDirs)

#-------------------------------------------------------------------------------------------
# Options
#-------------------------------------------------------------------------------------------
option(BAVIL_BUILD_TESTS "Enable generation of build files for tests" OFF)
option(BAVIL_BUILD_INSTALL "Enable install library" OFF)

if(BAVIL_BUILD_INSTALL)
    include(CMakePackageConfigHelpers)
endif()

# --------------------------
# language option
# --------------------------
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)

# --------------------------
# source characterset
# --------------------------
add_compile_options("$<$<C_COMPILER_ID:MSVC>:/utf-8>")
add_compile_options("$<$<CXX_COMPILER_ID:MSVC>:/utf-8>")

if(BAVIL_BUILD_TESTS)
    add_subdirectory(test)
endif()

set (CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_SOURCE_DIR}/scripts/cmake")
include(bavil_core_source_lists)


foreach(navis_var IN LISTS BVIL_CORE_NATVIS_LISTS)
    set(BVIL_CORE_PUBLIC_NATVIS_LISTS ${BVIL_CORE_PUBLIC_NATVIS_LISTS} "${CMAKE_CURRENT_SOURCE_DIR}${navis_var}" )
    set(BVIL_CORE_SOURCE_NATVIS_LISTS ${BVIL_CORE_PUBLIC_NATVIS_LISTS}
        $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}${navis_var}>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}${navis_var}>
    )
endforeach()

add_library(bavil_core STATIC ${BVIL_CORE_PRIVATE_SOURCE_LISTS} ${BVIL_CORE_PUBLIC_SOURCE_LISTS} ${BVIL_CORE_PUBLIC_NATVIS_LISTS})

target_include_directories(bavil_core PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src/private)
target_include_directories(bavil_core PUBLIC
        $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/src/public>
        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
    )

target_sources(bavil_core INTERFACE ${BVIL_CORE_SOURCE_NATVIS_LISTS})

if(BAVIL_BUILD_INSTALL)

    # create and install an export set for bavil_core target as 
    set(bavil_core_CMAKE_CONFIG_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/bavil_core")

    configure_package_config_file(
        bavil_coreConfig.cmake.in
        ${CMAKE_CURRENT_BINARY_DIR}/bavil_coreConfig.cmake
        INSTALL_DESTINATION ${bavil_core_CMAKE_CONFIG_DESTINATION}
    )

    # create and install an export set for Terra target as Terra
    install(
        TARGETS bavil_core 
        EXPORT bavil_coreTargets
        ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
        LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
        RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    )

    install(EXPORT bavil_coreTargets DESTINATION ${bavil_core_CMAKE_CONFIG_DESTINATION})

    write_basic_package_version_file(
        "${CMAKE_CURRENT_BINARY_DIR}/bavil_coreConfigVersion.cmake"
        VERSION 0.003
        COMPATIBILITY SameMajorVersion
    )

    install(TARGETS bavil_core LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}")
    install(DIRECTORY "src/public/" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")

    install(
        FILES
        "${CMAKE_CURRENT_BINARY_DIR}/bavil_coreConfig.cmake"
        "${CMAKE_CURRENT_BINARY_DIR}/bavil_coreConfigVersion.cmake"
        DESTINATION ${bavil_core_CMAKE_CONFIG_DESTINATION}
    )

endif()
